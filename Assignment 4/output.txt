type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
parameter-declaration -> declaration-specifiers declarator
parameter-list -> parameter-declaration
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
parameter-declaration -> declaration-specifiers declarator
parameter-list -> parameter-list , parameter-declaration
parameter-type-list -> parameter-list
direct-declarator -> direct-declarator ( parameter-type-list )
declarator -> pointer-opt direct-declarator
declaration-list-opt -> epsilon
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression > shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
jump-statement -> return expression-opt ;
statement -> jump-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
jump-statement -> return expression-opt ;
statement -> jump-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
selection-statement -> if ( expression ) statement else statement
statement -> selection-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
function-definition --> declaration-specifiers declarator declaration-list-opt compound-statement
external-declaration -> function-definition
translation-unit -> external-declaration
type-specifier -> void
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
type-qualifier-list-opt -> epsilon
pointer -> * type-qualifier-list-opt
pointer-opt -> pointer
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
parameter-declaration -> declaration-specifiers declarator
parameter-list -> parameter-declaration
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
type-qualifier-list-opt -> epsilon
pointer -> * type-qualifier-list-opt
pointer-opt -> pointer
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
parameter-declaration -> declaration-specifiers declarator
parameter-list -> parameter-list , parameter-declaration
parameter-type-list -> parameter-list
direct-declarator -> direct-declarator ( parameter-type-list )
declarator -> pointer-opt direct-declarator
declaration-list-opt -> epsilon
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
unary-operator -> *
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
unary-expression -> unary-operator cast-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item
unary-operator -> *
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
unary-expression -> unary-operator cast-expression
assignment-operator -> =
unary-operator -> *
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
unary-expression -> unary-operator cast-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
unary-operator -> *
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
unary-expression -> unary-operator cast-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
expression-opt -> epsilon
jump-statement -> return expression-opt ;
statement -> jump-statement
block-item -> statement
block-item-list -> block-item-list block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
function-definition --> declaration-specifiers declarator declaration-list-opt compound-statement
external-declaration -> function-definition
translation-unit -> translation-unit external-declaration
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
identifier-list-opt -> epsilon
direct-declarator -> direct-declarator ( identifier-list-opt )
declarator -> pointer-opt direct-declarator
declaration-list-opt -> epsilon
storage-class-specifier -> auto
declaration-specifiers-opt -> epsilon
declaration-specifiers -> storage-class-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item
type-specifier -> float
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> floating-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> multiplicative-expression * cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> shift-expression >> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> +=
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
postfix-expression -> postfix-expression ++
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> AND-expression & equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> inclusive-OR-expression | exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> exclusive-OR-expression ^ AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> long
type-specifier -> long
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
declaration-specifiers-opt -> declaration-specifiers
declaration-specifiers -> type-specifier declaration-specifiers-opt
declaration-specifiers-opt -> declaration-specifiers
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> floating-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> /=
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> short
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
declaration-specifiers-opt -> declaration-specifiers
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
type-specifier -> double
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> floating-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
type-specifier -> long
type-specifier -> double
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
declaration-specifiers-opt -> declaration-specifiers
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
init-declarator -> declarator
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
constant -> floating-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> char
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> character-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
type-specifier -> char
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
type-qualifier-list-opt -> epsilon
pointer -> * type-qualifier-list-opt
pointer-opt -> pointer
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
primary-expression -> string-literal
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
identifier-opt -> identifier
enumerator -> enumeration-constant
enumerator-list -> enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enumerator -> enumeration-constant
enumerator-list -> enumerator-list , enumerator
enum-specifier -> enum identifier-opt { enumerator-list-opt }
type-specifier -> enum-specifier
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
init-declarator-list-opt -> epsilon
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
enum-specifier -> enum identifier
type-specifier -> enum-specifier
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
postfix-expression -> postfix-expression ++
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression < shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
iteration-statement -> do statement while ( expression ) ;
statement -> iteration-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression < shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
primary-expression -> identifier
postfix-expression -> primary-expression
postfix-expression -> postfix-expression ++
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
iteration-statement -> while ( expression ) statement
statement -> iteration-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
initializer -> assignment-expression
init-declarator -> declarator = initializer
init-declarator-list -> init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression < shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
primary-expression -> identifier
postfix-expression -> primary-expression
postfix-expression -> postfix-expression ++
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
jump-statement -> continue ;
statement -> jump-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
iteration-statement -> for ( declaration expression-opt ; expression-opt ) statement
statement -> iteration-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> equality-expression == relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
statement -> compound-statement
selection-statement -> if ( expression ) statement else statement
statement -> selection-statement
block-item -> statement
block-item-list -> block-item-list block-item
type-specifier -> int
declaration-specifiers-opt -> epsilon
declaration-specifiers -> type-specifier declaration-specifiers-opt
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
init-declarator -> declarator
init-declarator-list -> init-declarator
pointer-opt -> epsilon
direct-declarator -> identifier
declarator -> pointer-opt direct-declarator
init-declarator -> declarator
init-declarator-list -> init-declarator-list , init-declarator
init-declarator-list-opt -> init-declarator-list
declaration -> declaration-specifiers init-declarator-list-opt ;
block-item -> declaration
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> logical-AND-expression && inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-OR-expression || logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
unary-operator -> !
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
unary-expression -> unary-operator cast-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression < shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression > shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression <= shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> relational-expression >= shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> equality-expression == relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> equality-expression != relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> shift-expression << additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
assignment-operator -> =
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
primary-expression -> identifier
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> shift-expression >> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
assignment-expression -> unary-expression assignment-operator assignment-expression
expression -> assignment-expression
expression-opt -> expression
expression-statement -> expression-opt ;
statement -> expression-statement
block-item -> statement
block-item-list -> block-item-list block-item
constant -> integer-constant
primary-expression -> constant
postfix-expression -> primary-expression
unary-expression -> postfix-expression
cast-expression -> unary-expression
multiplicative-expression -> cast-expression
additive-expression -> multiplicative-expression
shift-expression -> additive-expression
relational-expression -> shift-expression
equality-expression -> relational-expression
AND-expression -> equality-expression
exclusive-OR-expression -> AND-expression
inclusive-OR-expression -> exclusive-OR-expression
logical-AND-expression -> inclusive-OR-expression
logical-OR-expression -> logical-AND-expression
conditional-expression -> logical-OR-expression
assignment-expression -> conditional-expression
expression -> assignment-expression
expression-opt -> expression
jump-statement -> return expression-opt ;
statement -> jump-statement
block-item -> statement
block-item-list -> block-item-list block-item
block-item-list-opt -> block-item-list
compound-statement -> { block-item-list-opt }
function-definition --> declaration-specifiers declarator declaration-list-opt compound-statement
external-declaration -> function-definition
translation-unit -> translation-unit external-declaration
